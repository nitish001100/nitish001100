package com.geeksOfGeeks.youtubegeeksOfGeeksVideos;

import java.util.Arrays;

public class MinSumCloseToZero {

    static int distance = Integer.MAX_VALUE;
    static int element = Integer.MAX_VALUE;
    static int left = 0;
    static int right = 0;

    public static void main(String[] args) {
        int arr[] = {-80, -10, 0, 1, 60, 70, 85};
        minAbsSumPairN2(arr);
        Arrays.sort(arr);
        right = arr.length - 1;
        int mid = findtheIndexWhichIsCloseToZero(arr, left, right);
        System.out.println(mid);

        findMinSum(arr);
    }


    // To solve in nlogn + n  = ~O(nlogn)

    private static void findMinSum(int[] arr) {
        int left = 0;
        int right = arr.length - 1;
        int sum = Integer.MAX_VALUE;

        while (left < right) {
            if ((arr[left] + arr[right]) < 0) {
                sum = (arr[left] + arr[right]);
                left += 1;
            } else {
                sum = (arr[left] + arr[right]);
                right -= 1;
            }
        }

        System.out.println(sum);
    }

    private static int findtheIndexWhichIsCloseToZero(int[] arr, int left, int right) {
        int mid = (left + right) / 2;

        if (!(left == right)) {
            if (Math.abs(arr[mid] - 0) <= distance) {
                distance = mid;
                element = arr[mid];
                findtheIndexWhichIsCloseToZero(arr, left, mid);
            } else {
                distance = mid;
                element = arr[mid];
                findtheIndexWhichIsCloseToZero(arr, mid + 1, right);
            }
        }
        return mid;
    }

    // Tc :O(n2)
    private static void minAbsSumPairN2(int[] arr) {
        int min = Integer.MAX_VALUE;
        int closeToZero = Integer.MAX_VALUE;
        int element1 = 0;
        int element2 = 0;


        for (int itr1 = 0; itr1 < arr.length; itr1++) {
            for (int itr2 = itr1 + 1; itr2 < arr.length; itr2++) {
                if ((arr[itr1] + arr[itr2]) < min && Math.abs(arr[itr1] + arr[itr2]) - 0 < Math.abs(closeToZero)) {
                    min = (arr[itr1] + arr[itr2]);
                    closeToZero = ((arr[itr1] + arr[itr2]));
                    element1 = arr[itr1];
                    element2 = arr[itr2];
                }
            }
        }

        System.out.println("Min Sum which close to zero is: " + closeToZero + " and generated by " + element1 + " && " + element2);
        return;
    }

}
